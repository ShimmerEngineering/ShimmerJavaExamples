/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mnolan' at '05/10/16 15:40' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    flatDir {
       dirs 'libs'
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/ShimmerEngineering/Shimmer-Java-Android-API")
        credentials {
            /* Create gradle.properties file in GRADLE_USER_HOME/.gradle/ 
            (e.g. C:/Users/YourUsername/.gradle/) with the two lines listed below. Fill in your 
            Github ID and personal access token - as generated through the Github Developer 
            Settings page. The token needs to have "read:packages" scope enabled on it: 
                gpr.usr=GITHUB_USER_ID 
                gpr.key=PERSONAL_ACCESS_TOKEN 
            */
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

	compile(group: 'com.shimmerresearch', name: 'shimmerdriverpc', version: '0.10.0_alpha')
	
    compile name: 'ShimmerBiophysicalProcessingLibrary_Rev_0_11'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
